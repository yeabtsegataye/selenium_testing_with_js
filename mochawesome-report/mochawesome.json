{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 1,
    "pending": 0,
    "failures": 2,
    "start": "2023-11-24T09:33:31.384Z",
    "end": "2023-11-24T09:34:50.255Z",
    "duration": 78871,
    "testsRegistered": 3,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "76107830-0bcb-4ff6-abe4-2acabe6bae03",
      "title": "",
      "fullFile": "/home/tati/Desktop/my_code/selenium_js_testing/test/test.js",
      "file": "/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0e076731-fab3-4945-b25d-39f580bd6c09",
          "title": "Title for testing using Mocha",
          "fullFile": "/home/tati/Desktop/my_code/selenium_js_testing/test/test.js",
          "file": "/test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Title for testing using Mocha\"",
              "fullTitle": "Title for testing using Mocha \"after all\" hook in \"Title for testing using Mocha\"",
              "timedOut": false,
              "duration": 1789,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('This will be executed after each test');\nawait driver.quit();",
              "err": {},
              "uuid": "8ff1b9fa-40e1-4218-a1be-7fe5539f156c",
              "parentUUID": "0e076731-fab3-4945-b25d-39f580bd6c09",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "login test - Combination 1",
              "fullTitle": "Title for testing using Mocha login test - Combination 1",
              "timedOut": false,
              "duration": 70746,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get('https://meskelwallet-omfg.onrender.com/');\n    \n  const login = await driver.findElement(By.css('.btn.btn-light.ml-2'));\n  await login.click();\n    \n  const email = await driver.findElement(By.css('input.input[type=\"email\"]'));\n  await email.sendKeys(credential.username);\n    \n  const password = await driver.findElement(By.css('input.input[type=\"password\"]'));\n  await password.sendKeys(credential.password);\n    \n  const submit = await driver.findElement(By.css('button.submit[type=\"submit\"]'));\n  await submit.click();\n    \n  const dashboardLink = await driver.wait(until.elementLocated(By.css('a.nav-link[href=\"/Dashboard\"]')), 50000);\n  const result = await dashboardLink.getAttribute('innerText');\n    \n  assert.strictEqual(result, \"Dashboard\", `Login was not successful for ${credential.username}`);\n} catch (error) {\n  console.error(`Error in test for combination ${index + 1}:`, error);\n  throw error;\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, a.nav-link[href=\"/Dashboard\"])\nWait timed out after 50192ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, a.nav-link[href=\"/Dashboard\"])\nWait timed out after 50192ms\n    at /home/tati/Desktop/my_code/selenium_js_testing/test/node_modules/selenium-webdriver/lib/webdriver.js:929:17\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c812e0de-edd1-4277-859c-6897e99efbd8",
              "parentUUID": "0e076731-fab3-4945-b25d-39f580bd6c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login test - Combination 2",
              "fullTitle": "Title for testing using Mocha login test - Combination 2",
              "timedOut": false,
              "duration": 5766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get('https://meskelwallet-omfg.onrender.com/');\n    \n  const login = await driver.findElement(By.css('.btn.btn-light.ml-2'));\n  await login.click();\n    \n  const email = await driver.findElement(By.css('input.input[type=\"email\"]'));\n  await email.sendKeys(credential.username);\n    \n  const password = await driver.findElement(By.css('input.input[type=\"password\"]'));\n  await password.sendKeys(credential.password);\n    \n  const submit = await driver.findElement(By.css('button.submit[type=\"submit\"]'));\n  await submit.click();\n    \n  const dashboardLink = await driver.wait(until.elementLocated(By.css('a.nav-link[href=\"/Dashboard\"]')), 50000);\n  const result = await dashboardLink.getAttribute('innerText');\n    \n  assert.strictEqual(result, \"Dashboard\", `Login was not successful for ${credential.username}`);\n} catch (error) {\n  console.error(`Error in test for combination ${index + 1}:`, error);\n  throw error;\n}",
              "err": {},
              "uuid": "7ba9017e-bb24-47a8-b37a-62791c5fae4b",
              "parentUUID": "0e076731-fab3-4945-b25d-39f580bd6c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login test - Combination 3",
              "fullTitle": "Title for testing using Mocha login test - Combination 3",
              "timedOut": false,
              "duration": 536,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get('https://meskelwallet-omfg.onrender.com/');\n    \n  const login = await driver.findElement(By.css('.btn.btn-light.ml-2'));\n  await login.click();\n    \n  const email = await driver.findElement(By.css('input.input[type=\"email\"]'));\n  await email.sendKeys(credential.username);\n    \n  const password = await driver.findElement(By.css('input.input[type=\"password\"]'));\n  await password.sendKeys(credential.password);\n    \n  const submit = await driver.findElement(By.css('button.submit[type=\"submit\"]'));\n  await submit.click();\n    \n  const dashboardLink = await driver.wait(until.elementLocated(By.css('a.nav-link[href=\"/Dashboard\"]')), 50000);\n  const result = await dashboardLink.getAttribute('innerText');\n    \n  assert.strictEqual(result, \"Dashboard\", `Login was not successful for ${credential.username}`);\n} catch (error) {\n  console.error(`Error in test for combination ${index + 1}:`, error);\n  throw error;\n}",
              "err": {
                "message": "NoSuchElementError: Unable to locate element: .btn.btn-light.ml-2",
                "estack": "NoSuchElementError: Unable to locate element: .btn.btn-light.ml-2\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:524:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:601:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:529:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async thenableWebDriverProxy.execute (node_modules/selenium-webdriver/lib/webdriver.js:745:17)\n    at async Context.<anonymous> (test.js:30:27)",
                "diff": null
              },
              "uuid": "0b8059e2-dd44-4d7d-87f2-498660cc8a67",
              "parentUUID": "0e076731-fab3-4945-b25d-39f580bd6c09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ba9017e-bb24-47a8-b37a-62791c5fae4b"
          ],
          "failures": [
            "c812e0de-edd1-4277-859c-6897e99efbd8",
            "0b8059e2-dd44-4d7d-87f2-498660cc8a67"
          ],
          "pending": [],
          "skipped": [],
          "duration": 77048,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}